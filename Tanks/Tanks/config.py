from spritesheet import SpriteSheet  # Импортируем класс SpriteSheet для работы с спрайт-листами
import sys                            # Импортируем модуль sys для работы с аргументами командной строки

# Константы для управления режимами отладки
FIELD_DEBUG = '--field-debug' in sys.argv        # Включение отладки поля, если аргумент указан
DEBUG = '--debug' in sys.argv                      # Включение общего режима отладки, если аргумент указан
PROJECTILE_DEBUG = '--projectile-debug' in sys.argv  # Включение отладки снарядов, если аргумент указан

# Ширина и высота игрового экрана
GAME_WIDTH = 540
GAME_HEIGHT = 480

# Высота и ширина игровых полей (13 блоков, каждый из которых 2x2 клетки)
FIELD_HEIGHT = FIELD_WIDTH = 13 * 2  # Высота и ширина поля: 13 полных блоков по (2x2) клетки

# Путь к файлу с атласом спрайтов
ATLAS_FILE = 'data/atlas.png'

_altas = None  # Переменная для хранения экземпляра спрайт-листа, инициализируется в функции

def get_atlas() -> SpriteSheet:  # Функция для получения экземпляра спрайт-листа
    global _altas                  # Объявляем, что будем использовать глобальную переменную _altas
    if _altas is None:            # Если спрайт-лист еще не инициализирован
        _altas = SpriteSheet(ATLAS_FILE, upsample=2, sprite_size=8)  # Создаем новый объект SpriteSheet
        # upsample=2 увеличивает размер спрайтов, sprite_size=8 устанавливает размер каждого спрайта
    return _altas                  # Возвращаем уже созданный или только что созданный спрайт-лист

ATLAS = get_atlas                 # Присваиваем функцию get_atlas переменной ATLAS для удобной ссылки
